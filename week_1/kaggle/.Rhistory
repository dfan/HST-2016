rbinom(50,1,prob = 0.5)
rbinom(50,2,prob = 0.5)
rbinom(50,1,prob = 0.5)
false_positive <- rbinom(10000,1,prob = 0.01)
plot(false_positive)
?cdf
cumsum(false_positive)
plot(cumsum(false_positive))
false_positive <- rbinom(99999,2000,prob = 0.0001) #99,999 coin flips with odds 0.01%
false_positive <- rbinom(99999,1,prob = 0.0001) #99,999 coin flips with odds 0.01%
false_positive[1:100]
false_positive <- rbinom(99999,1,prob = 0.1) #99,999 coin flips with odds 0.01%
false_positive[1:100]
false_positive <- rbinom(99999,10000,prob = 0.0001) #99,999 coin flips with odds 0.01%
false_positive[1:100]
false_positive_rate <- 0.0001
population <- 100000
tests <- 10000
results <- rep(0,tests)
for (i in 1:tests)
results[i] <- mean(rbinom(population-1,1,prob = false_positive_rate))
plot(results)
c(1,0,1) | c(0,0,0)
false_positive_rate <- 0.0001
population <- 100000
tests <- 10000
results <- rep(0,population-1)
list <- rep(0,tests)
for (i in 1:tests)
{
results <- results | rbinom(population-1,1,prob = false_positive_rate)
list[i] <- mean(results)
}
#1 true positive, 100,000-1 possible people can get false positives.
false_positive_rate <- 0.0001
population <- 100000
tests <- 10
results <- rep(0,population-1)
list <- rep(0,tests)
for (i in 1:tests)
{
results <- results | rbinom(population-1,1,prob = false_positive_rate)
list[i] <- mean(results)
}
#99,999 coin flips with odds 0.01% Each person gets 10,000 flips.
plot(list)
results[1:100]
#1 true positive, 100,000-1 possible people can get false positives.
false_positive_rate <- 0.0001
population <- 100000
tests <- 10000
results <- rep(0,population-1)
list <- rep(0,tests)
for (i in 1:tests)
{
results <- results | rbinom(population-1,1,prob = false_positive_rate)
list[i] <- mean(results)
}
#99,999 coin flips with odds 0.01% Each person gets 10,000 flips.
plot(list)
10*c(1:1000)
thinned_list <- list[10*c(1:1000)]
plot(thinned_list, )
plot(thinned_list)
thinned_list <- list[50*c(1:1000)]
plot(thinned_list)
plot(thinned_list)
dim(thinned_list)
length(thinned_list)
thinned_list <- list[50*c(1:200)]
plot(thinned_list)
thinned_list <- list[100*c(1:100)]
plot(thinned_list)
plot(thinned_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result", xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(thinned_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result", xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(thinned_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result", xlab = "No. of Independent Tests", ylab = "Percentage of Population with a False-Positive Test Result")
plot(thinned_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result", xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
thinned_scaled_list <- 100*list[100*c(1:100)]
plot(thinned_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result", xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
thinned_scaled_list <- 100*list[100*c(1:100)]
plot(thinned_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result", xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
thinned_list[1:10]
thinned_scaled_list <- 100*list[100*c(1:100)]
thinned_list[1:10]
thinned_scaled_list <- 1000*list[100*c(1:100)]
thinned_list[1:10]
thinned_scaled_list <- 100*list[100*c(1:100)]
plot(thinned_scaled_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result", xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
?plot
plot(thinned_scaled_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(100*c(1:100),thinned_scaled_list, main = "Figure. Percentage of Total Population With a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
?seq
sparse <- 100*c(1:100)
sparse[1:10]
seq(1,10000,100)
seq(0,10000,100)
sparse <- seq(0,10000,100)
thinned_scaled_list <- 100*list[sparse]
sparse <- seq(0,10000,100)
plot(sparse,100*list[sparse], main = "Figure. Percentage of Total Population With a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
sparse <- seq(0,10000,100)
plot(sparse,100*list[sparse], main = "Figure. Percentage of Total Population With a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
length(sparse)
sparse <- seq(0,10000,100)
length(list[sparse])
sparse <- seq(100,10000,100)
plot(sparse,100*list[sparse], main = "Figure. Percentage of Total Population With a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*list[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
?sample
sample(10,100,replace = T)
sample(10000,10)
sort(.Last.value)
for (i in 1:test_num)
{
results[sample(10000,10)] <- 1
result_list[i] <- mean(results)
}
test_num <- 10000
false_positive_rate <- 0.0001
population <- 100000
test_num <- 10000
results <- rep(0,population-1)
result_list <- rep(0,test_num)
for (i in 1:test_num)
{
results[sample(10000,10)] <- 1
result_list[i] <- mean(results)
}
sparse <- seq(100,10000,100)
plot(sparse,100*result_list[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
results
mean(results)
for (i in 1:test_num)
{
results[sample(100000,10)] <- 1
result_list[i] <- mean(results)
}
sparse <- seq(100,10000,100)
plot(sparse,100*result_list[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
2^(1:5)
results_list_3 <- (population-1)*(1-(1-false_positive_rate)^c(1:10))
results_list_3
results_list_3 <- (population-1)*(1-(1-false_positive_rate)^c(1:10000))
sparse <- seq(100,10000,100)
plot(sparse,100*result_list[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
false_positive_rate <- 0.001
results_list_3 <- (population-1)*(1-(1-false_positive_rate)^c(1:10000))
sparse <- seq(100,10000,100)
plot(sparse,100*result_list[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
results_list_3 <- (population-1)*(1-(1-false_positive_rate)^c(1:10000))
plot(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
results_list_3 <- (population-1)*(1-(1-false_positive_rate)^c(1:10000))
result_list_3 <- (population-1)*(1-(1-false_positive_rate)^c(1:10000))
plot(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
result_list_3[1:10]
result_list_3 <- (1-(1-false_positive_rate)^c(1:10000))
result_list_3 <- 1-(1-false_positive_rate)^c(1:10000)
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
result_list_3[1:10]
result_list_3 <- 1-(1-false_positive_rate)^c(1:10000)
plot(result_list_3)
result_list_3 <- 1-(1-false_positive_rate)^c(1:10000)
plot(result_list_3)
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
false_positive_rate <- 0.0001
population <- 100000
test_num <- 10000
results <- rep(0,population-1)
result_list <- rep(0,test_num)
#Method 1: simulation | sample
thod 1: simulation | sample
for (i in 1:test_num)
{
results[sample(population-1,10)] <- 1
result_list_1[i] <- mean(results)
}
result_list_1 <- rep(0,test_num)
result_list_2 <- rep(0,test_num)
result_list_3 <- rep(0,test_num)
for (i in 1:test_num)
{
results[sample(population-1,10)] <- 1
result_list_1[i] <- mean(results)
}
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
tion | rbinomial
for (i in 1:test_num)
{
results <- results | rbinom(population-1,1,prob = false_positive_rate)
result_list_2[i] <- mean(results)
}
plot(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
results <- rep(0,population-1)
result_list_2 <- rep(0,test_num)
for (i in 1:test_num)
{
results <- results | rbinom(population-1,1,prob = false_positive_rate)
result_list_2[i] <- mean(results)
}
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse-30], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_3[sparse-60], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
results <- rep(0,population-1)
result_list_3 <- 1-(1-false_positive_rate)^c(1:test_num)
points(sparse,100*result_list_3[sparse-60], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
results <- rep(0,population-1)
result_list_3 <- 1-(1-false_positive_rate)^c(1:test_num)
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_3[sparse-50], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_3[sparse-50], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
points(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
)
?pch
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 0, col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = "O", col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
sparse <- seq(100,10000,100)
plot(sparse,100*result_list_1[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_2[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = "O", col = "red", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(sparse,100*result_list_3[sparse], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
col = "green", ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(subpoints,100*result_list_1[subpoints], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(subpoints,100*result_list_2[subpoints], pch = "O", col = "red")
subpoints <- seq(100,10000,100)
plot(subpoints,100*result_list_1[subpoints], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(subpoints,100*result_list_2[subpoints], pch = "O", col = "red")
points(subpoints,100*result_list_3[subpoints], col = "green", ylim = c(0,70))
cor(result_list_1,result_list_2)
cor(result_list_1,result_list_3)
?legend()
?legend("bottomright",col = c("red","green","blue"))
?legend("bottomright",c(1,2,3),col = c("red","green","blue"))
legend("bottomright",c(1,2,3),col = c("red","green","blue"))
?legend
legend("bottomright",legend = c(1,2,3),col = c("red","green","blue"))
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = 20, cex = 0.9)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(1,2,3), cex = 0.9)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,"O"), cex = 0.9)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,"O"), cex = 0.9)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,O), cex = 0.9)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,2), cex = 0.9)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,0), cex = 0.9)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,0), cex = 0.9)
subpoints <- seq(100,10000,100)
plot(subpoints,100*result_list_1[subpoints], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(subpoints,100*result_list_2[subpoints], pch = "O", col = "red")
points(subpoints,100*result_list_3[subpoints], col = "green", ylim = c(0,70))
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,0), cex = 0.9)
cor(result_list_1,result_list_3)
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,0), cex = 0.9)
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
plot(subpoints,100*result_list_1[subpoints], main = "Figure. Percentage of Total Population with a False-Positive Test Result",
pch = 20, ylim = c(0,70), xlab = "No. of Independent Tests", ylab = "Percentage of Total Population with a False-Positive Test Result")
points(subpoints,100*result_list_2[subpoints], pch = "O", col = "red")
points(subpoints,100*result_list_3[subpoints], col = "green", ylim = c(0,70))
legend("bottomright",c("Method 1","Method 2", "Method 3"), col = c("black","red","green"), pch = c(20,1,0), cex = 0.9)
results <- rep(0,population-1)
result_list_3 <- method_3(0.0001, 100000, 10000)
method_3 <- function(false_positive_rate, population, test_num) {
results <- rep(0,population-1)
return(1-(1-false_positive_rate)^c(1:test_num))
}
result_list_3 <- method_3(0.0001, 100000, 10000)
result_list_4 <- method_3(0.0001, 10000000, 10000)
plot(result_list_3)
points(result_list_4)
plot(result_list_3)
plot(result_list_4)
read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)
x <- as.matrix(read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
x[1:4,1:$]
x <- as.matrix(read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
x[1:4,1:4]
str(x)
x <- as.matrix(read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))$V1
x <- as.matrix(read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)$V1)
str(x)
x <- read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)
str(x)
x <- read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)$V1
str(x)
x <- read.table(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)
str(x)
x <- read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)
x
str(x)
x <- as.matrix(read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
str(x)
x <- read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)
str(x)
x[1:4,1:4]
rownames(x) <- x$V1
row <- x$V1
x <- read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F)
str(x)
x <- as.matrix(read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
str(x)
x[1:4,1:4]
x <- as.matrix(read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
row <- x[,1]
allele.diff <- x[,-1]
rownames(allele.diff) <- row
allele.diff[1:4,1:4]
allele.diff[1:3,1:3]
colnames(allele.diff) <- c("AFR", "NFE", "Diff")
allele.diff[1:3,1:3]
allele.diff[1:3,1:10]
allele.diff[1:10,1:3]
plot(allele.diff[,3])
plot(allele.diff[,3], type = 'h')
x <- as.matrix(read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
names <- x[,1]
diff <- x[,4]
names[1:5]
diff[1:5]
diff <- diff/sum(diff)
x <- as.matrix(read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
names <- x[,1]
diff <- x[,4]
x <- as.matrix(read.csv(file = "/Users/jamesdiao/Desktop/Kohane\ Lab/Week\ 1\ Project/Allele_Diff.txt",header = F, stringsAsFactors=F))
names <- x[,1]
diff <- x[,4]
std.diff <- diff/sum(diff)
plot(cumsum(std.diff), type = 'h')
plot(cumsum(std.diff))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF")
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,200))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,100))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,50))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,200))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,100))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
abline(h=0.5)
abline(v=7)
abline(h=0.501)
abline(h=0.51)
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF")
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
abline(h=0.505)
abline(v=7)
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF")
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
abline(h=0.5)
abline(v=7)
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF")
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
abline(h=0.5)
abline(h=1)
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF")
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences between AFR and NFE", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences between AFR and NFE", xlab = "Alleles Ranked by Difference", ylab = "CDF")
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences between AFR and NFE", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences between AFR and NFE", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,20))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences between AFR and NFE", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,40))
plot(cumsum(std.diff), main = "Empirical CDF Plot of Allele Frequency Differences between AFR and NFE", xlab = "Alleles Ranked by Difference", ylab = "CDF", xlim = c(0,30))
install.packages("RMySQL")
logreg_init <- glm(train_y ~ ., data = train)
# Download 1_random_forest_r_submission.csv from the output below
# and submit it through https://www.kaggle.com/c/titanic-gettingStarted/submissions/attach
# to enter this getting started competition!
library(ggplot2)
library(randomForest)
library(mgcv)
library(MASS)
library(gbm)
library(klaR)
library(e1071)
library(FNN)
set.seed(1)
setwd("/Users/jamesdiao/Documents/Kohane_Lab/kaggle")
train_orig <- read.csv("./train.csv", stringsAsFactors=FALSE)
valid_flag <- runif(nrow(train_orig)) > 0.7
train <- train_orig[valid_flag,]
test <- train_orig[!valid_flag,]
train_y <- train$Survived
test_y <- test$Survived
test_orig  <- read.csv("./test.csv",  stringsAsFactors=FALSE)
extractFeatures <- function(data) {
features <- c("Pclass",
"Age",
"Sex",
"Parch",
"SibSp",
"Fare",
"Embarked")
fea <- data[,features]
fea$Age[is.na(fea$Age)] <- -1
fea$Fare[is.na(fea$Fare)] <- median(fea$Fare, na.rm=TRUE)
fea$Embarked[fea$Embarked==""] = "S"
fea$Sex      <- as.factor(fea$Sex)
fea$Embarked <- as.numeric(fea$Embarked == "C")
fea$Sex      <- as.numeric(fea$Sex)-1
return(fea)
}
train <- extractFeatures(train)
test <- extractFeatures(test)
train <- cbind(train_y, train)
str(train)
#gam_init <- gam(train[,1] ~ s(Age)+s(Fare), data = train)
#gam_init <- gam(train$Survived ~ extractFeatures(train))
#gam_y <- predict(gam_init, test)
#mean(gam_y > 0.5)
logreg_init <- glm(train_y ~ ., data = train, family = binomial("logit"))
logit_init <- glm(train_y ~ ., data = train, family = binomial("logit"))
logit_y <- predict.glm(logit_init, test)
logit_y
mean((logit > 0.5) == test_y)
mean((logit_Y > 0.5) == test_y)
mean((logit_y > 0.5) == test_y)
mean(logit_y > 0.5)
mean(test_y > 0.5)
lm_init <- lm(train_y ~ ., data = train)
lm_y <- predict.lm(lm_init,test)
mean((lm_y > 0.5) == test_y)
mean(lm_y > 0.5)
table(lm_y, test_y)
table(lm_y>0.5, test_y)
lm_init <- lm(train_y ~ ., data = train)
lm_y <- predict.lm(lm_init,test)
mean((lm_y > 0.5) == test_y)
svm_init <- svm(train_y ~ ., data = train, kernel = "linear")
svm_y <- predict(svm_init,test)
mean((svm_y > 0.5) == test_y)
?svm
svm_init <- svm(train_y ~ ., data = train, kernel = "polynomial")
svm_y <- predict(svm_init,test)
mean((svm_y > 0.5) == test_y)
svm_init <- svm(train_y ~ ., data = train, kernel = "sigmoid")
svm_y <- predict(svm_init,test)
mean((svm_y > 0.5) == test_y)
svm_init <- svm(train_y ~ ., data = train, kernel = "linear")
svm_y <- predict(svm_init,test)
mean((svm_y > 0.5) == test_y)
lm_init <- lm(train_y ~ ., data = train)
lm_y <- predict.lm(lm_init,test)
mean((lm_y > 0.5) == test_y)
