names(award.list) <- names(link.list)
multi_placement <- list()
add.counter <- 1
for (i in 1:length(link.list)) {
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
list(rank.list, multi_placement)
}
dancer.name <- "Gloria Wu"
output <- extract_finals_record(dancer.name)
output[[2]]
sapply(output[[1]], names)
output[[2]]
output <- extract_finals_record(dancer.name)
sapply(output[[1]], names)
output[[2]]
dancer.name <- "Gloria Wu"
output <- extract_finals_record(dancer.name)
sapply(output[[1]], names)
output[[2]]
rank.list
output[[1]]
length(output[[1]])
paste(" ",1,"")
paste(" ",15,"")
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x)
)
rank.list <- output[[1]]
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
rank.list
sapply(output[[1]], names)
sapply(rank.list, names)
output[[2]]
dancer.name <- "Gloria Wu"
sapply(output[[1]], names)
output[[2]]
dancer.name <- "Gloria Wu"
sapply(output[[1]], names)
output[[2]]
dancer.name <- "Gloria Wu"
sapply(output[[1]], names)
output[[2]]
names(output[[1]]) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
dancer.name <- "Gloria Wu"
sapply(output[[1]], names)
output[[2]]
dancer.name <- "Melissa Kropf"
output <- extract_finals_record(dancer.name)
sapply(output[[1]], names)
output[[2]]
dancer.name <- "Saran Morgan"
sapply(output[[1]], names)
output[[2]]
rank.list <- output[[1]]
sapply(rank.list, function(x) length(x)>0)
rank.list[sapply(rank.list, function(x) length(x)>0)]
extract_finals_record <- function(dancer.name) {
if(length(dancer.name)==1)
dancer.name <- strsplit(dancer.name, " ")[[1]]
u <- paste(paste("http://results.o2cm.com/individual.asp?szLast=",dancer.name[2],sep=""),dancer.name[1], sep="&szFirst=")
link.list <- get_google_page_urls(u)
award.list <- rep(0,length(link.list))
names(award.list) <- names(link.list)
multi_placement <- list()
add.counter <- 1
for (i in 1:length(link.list)) {
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
list(rank.list, multi_placement)
}
dancer.name <- "Saran Morgan"
output <- extract_finals_record(dancer.name)
sapply(output[[1]], names)
output[[2]]
library(scrapeR)
library(RCurl)
library(XML)
get_google_page_urls <- function(u) {
# read in page contents
html <- getURL(u)
# parse HTML into tree structure
doc <- htmlParse(html)
# extract url nodes using XPath.
links <- xpathSApply(doc, "//a/@href")
names(links) <- NULL
#extract events using XPath
full.list <- xpathSApply(doc, "//td[@class='t1n']", xmlValue)
free(doc)
# ensure urls start with "http" to avoid google references to the search page
links <- grep("http", links, fixed = TRUE, value=TRUE)
comps <- grep(" - ", full.list, fixed = TRUE, value=TRUE)
placed.comps <- full.list %in% comps
events <- grep(")", full.list, fixed = TRUE, value=TRUE)
placed.events <- full.list %in% events
comp.list <- comps[cumsum(placed.comps)[placed.events]]
names(links) <- paste(comp.list, events, sep = "")
return(links)
}
extract_finals_record <- function(dancer.name) {
if(length(dancer.name)==1)
dancer.name <- strsplit(dancer.name, " ")[[1]]
u <- paste(paste("http://results.o2cm.com/individual.asp?szLast=",dancer.name[2],sep=""),dancer.name[1], sep="&szFirst=")
link.list <- get_google_page_urls(u)
award.list <- rep(0,length(link.list))
names(award.list) <- names(link.list)
multi_placement <- list()
add.counter <- 1
for (i in 1:length(link.list)) {
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
list(rank.list, multi_placement)
}
dancer.name <- "Gloria Wu"
output <- extract_finals_record(dancer.name)
sapply(output[[1]], names)
output[[2]]
sortbycomp <- function(output, "Comp")
dancer.name <- "Saran Morgan"
output <- extract_finals_record(dancer.name)
sapply(output[[1]], names)
output[[2]]
dancer.name <- "Saran Morgan"
if(length(dancer.name)==1)
dancer.name <- strsplit(dancer.name, " ")[[1]]
u <- paste(paste("http://results.o2cm.com/individual.asp?szLast=",dancer.name[2],sep=""),dancer.name[1], sep="&szFirst=")
link.list <- get_google_page_urls(u)
award.list <- rep(0,length(link.list))
names(award.list) <- names(link.list)
multi_placement <- list()
add.counter <- 1
i=1
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
number
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
final_list
final_place
award.list
if(length(dancer.name)==1)
dancer.name <- strsplit(dancer.name, " ")[[1]]
u <- paste(paste("http://results.o2cm.com/individual.asp?szLast=",dancer.name[2],sep=""),dancer.name[1], sep="&szFirst=")
link.list <- get_google_page_urls(u)
award.list <- rep(0,length(link.list))
names(award.list) <- names(link.list)
multi_placement <- list()
add.counter <- 1
for (i in 1:length(link.list)) {
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
award.list
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
rank.list
if(max(award.list)==0)
rank.list <- award.list
else
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
if(max(award.list)==0) {
rank.list <- award.list
} else {
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
}
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
rank.list
if(max(award.list)==0) {
rank.list <- award.list
} else {
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
}
rank.list
award.list <- award.list[award.list!=-]
award.list <- award.list[award.list!=0]
award.list
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
award.list <- award.list[award.list!=0]
if(max(award.list)==0) {
rank.list <- 0
names(rank.list)[1] <- "N/A"
} else {
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
}
award.list
for (i in 1:length(link.list)) {
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
if(max(award.list)==0) {
rank.list <- 0
names(rank.list)[1] <- "N/A"
} else {
award.list <- award.list[award.list!=0]
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
}
award.list
for (i in 1:length(link.list)) {
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
max(award.list)
award.list
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
if(length(dancer.name)==1)
dancer.name <- strsplit(dancer.name, " ")[[1]]
u <- paste(paste("http://results.o2cm.com/individual.asp?szLast=",dancer.name[2],sep=""),dancer.name[1], sep="&szFirst=")
link.list <- get_google_page_urls(u)
award.list <- rep(0,length(link.list))
names(award.list) <- names(link.list)
multi_placement <- list()
add.counter <- 1
for (i in 1:length(link.list)) {
pageSource <- scrape(url=link.list[i], headers=FALSE, parse=TRUE)
dance.table <- readHTMLTable(pageSource[[1]])
couples.col <- which(sapply(1:length(dance.table), function(x) "Couples" %in% names(dance.table[[x]])))
couples.col <- dance.table[[couples.col]]
couple.list <- grep(" ",as.character(couples.col$Couples),fixed = T, value = T)
position <- grep(paste(dancer.name[1], dancer.name[2], sep = " "),couple.list,fixed = T, value = F)
place.list <- couples.col[,1]
place.list <- place.list[!is.na(place.list) & place.list!=""]
number <- as.character(place.list[position])
if(length(number)==1) {
rel.tables <- which(sapply(1:length(dance.table), function(x) number %in% dance.table[[x]]$V1))
final_place <- unlist(sapply(rel.tables, function(x) which(as.character(dance.table[[x]]$V1[-1])==number)))
} else final_place <- integer(0)
if (length(final_place)>1) {
len <- length(rel.tables)
p.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "P"))
res.loc <- sapply(rel.tables, function(x) which(as.character(unlist(dance.table[[x]][1,])) == "Res"))
loc.bin <- sapply(1:len, function(x) length(p.loc[[x]]) > length(res.loc[[x]]))
loc <- rep(0,length(p.loc))
loc[which(loc.bin)] <- p.loc[loc.bin]
loc[which(!loc.bin)] <- res.loc[!loc.bin]
loc <- unlist(loc)
multiple_final_place <- sapply(1:len, function(x) as.character(dance.table[[rel.tables[x]]][,loc[x]][-1])[final_place[len]])
multiple_final_place <- as.numeric(replace(multiple_final_place, multiple_final_place=="-",0))
multi_placement[[add.counter]] <- multiple_final_place
names(multi_placement)[add.counter] <- names(award.list)[i]
add.counter = add.counter + 1
} else if (length(final_place)==1)
award.list[i] <- final_place
}
award.list
max(.Last.value)
if(max(award.list)==0) {
rank.list <- 0
names(rank.list)[1] <- "N/A"
} else {
award.list <- award.list[award.list!=0]
rank.list <- sapply(1:max(award.list), function(x) award.list[award.list==x])
names(rank.list) <- sapply(1:length(rank.list), function(x) paste("Place:",x))
}
rank.list
list(rank.list, multi_placement)
sapply(output[[1]], names)
list(rank.list, multi_placement)
output <- .Last.value
sapply(output[[1]], names)
output[[2]]
sapply(output[[1]], names)
dancer.name <- "James Diao"
output <- extract_finals_record(dancer.name)
#Single_placement Results
sapply(output[[1]], names)
#Multi_placement Results
output[[2]]
?selectInput
?inputPanel
??inputPanel
??selectinput
library(scrapeR)
setwd("/Users/jamesdiao/Documents/Kohane_Lab/")
LMM.page <- scrape(url="http://personalizedmedicine.partners.org/Laboratory-For-Molecular-Medicine/Tests/Cardiomyopathy/HCM-Panel.aspx", headers=FALSE, parse=TRUE)
HCM.panel <- levels(readHTMLTable(LMM.page[[1]])[[1]]$Gene)
HCM.panel <- levels(readHTMLTable(LMM.page[[1]])[[1]]$Gene)
getwd()
HCM.panel <- read.table(paste(getwd(),"HCM_20_Gene_Panel",sep="/")
_
HCM.panel <- read.table(paste(getwd(),"HCM_20_Gene_Panel",sep="/"))
setwd("/Users/jamesdiao/Documents/Kohane_Lab/week_3")
HCM.panel <- read.table(paste(getwd(),"HCM_20_Gene_Panel",sep="/"))
HCM.panel
setwd("/Users/jamesdiao/Documents/Kohane_Lab/week_3")
HCM.panel <- read.table(paste(getwd(),"HCM_20_Gene_Panel",sep="/"))$V1
HCM.panel
