}
getAlleleFreq <- function(data, tags) {
sapply(unique(tags), function(tag) {
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(merged))
for(tag in tag.vec)
loc <- loc | grepl(tag,merged$Disease, ignore.case = T)
freq.exac <- merged %>% subset(loc) %>% select(ExAc_Overall_Frequency)
freq.esp <- merged %>% subset(loc) %>% select(ESP_Overall_Frequency)
missing <- is.na(freq.exac)
freq.exac[missing] <- freq.esp[missing]
hits <- sum(loc)
final <- 1-prod(1-freq.exac[!missing])
c(final, hits) %>% setNames(c("AF","Hits"))
}) %>% t %>% tbl_df -> freq
data.frame("Tags" = unique(tags), freq)
}
getAlleleFreq(merged,tags)
getAlleleFreq <- function(data, tags) {
data.frame("Tags" = unique(tags),
sapply(unique(tags), function(tag) {
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(data))
for(tag in tag.vec)
loc <- loc | grepl(tag,data$Disease, ignore.case = T)
freq.exac <- data %>% subset(loc) %>% select(ExAc_Overall_Frequency)
freq.esp <- data %>% subset(loc) %>% select(ESP_Overall_Frequency)
missing <- is.na(freq.exac)
freq.exac[missing] <- freq.esp[missing]
hits <- sum(loc)
final <- 1-prod(1-freq.exac[!missing])
c(final, hits) %>% setNames(c("AF","Hits"))
}) %>% t %>% tbl_df
)
}
freq <- getAlleleFreq(merged,tags)
freq
sub.clinvar$G1000_Overall_Frequency <- sapply(sub.clinvar$VarID, function(id) {
sub.1000g %>% subset(sub.1000g$VarID == id) %>% select(AF) %>% unlist %>% as.numeric
})
sub.clinvar %>% str
getAlleleFreq <- function(input, tags, data) {
data.frame("Tags" = unique(tags),
sapply(unique(tags), function(tag) {
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
freq.data <- input %>% subset(loc) %>% select(data)
#freq.esp <- input %>% subset(loc) %>% select(freq.use)
missing <- is.na(freq.data)
#freq.exac[missing] <- freq.esp[missing]
hits <- sum(loc)
final <- 1-prod(1-freq.data[!missing])
c(final, hits) %>% setNames(c("AF","Hits"))
}) %>% t %>% tbl_df
)
}
getAlleleFreq <- function(input, tags, data) {
temp <- sapply(unique(tags), function(tag) {
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
freq.data <- input %>% subset(loc) %>% select(contains(data))
#freq.esp <- input %>% subset(loc) %>% select(freq.use)
missing <- is.na(freq.data)
#freq.exac[missing] <- freq.esp[missing]
hits <- sum(loc)
final <- 1-prod(1-freq.data[!missing])
c(final, hits) %>% setNames(c("AF","Hits"))
}) %>% t %>% tbl_df
data.frame("Tags" = unique(tags), temp)
}
freq <- getAlleleFreq(merged,tags, "ExAc")
freq
freq <- getAlleleFreq(sub,clinvar,tags, "G1000")
freq <- getAlleleFreq(sub.clinvar,tags, "G1000")
freq
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2))
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.5), las = 1)
sum(freq$Hits)
freq <- getAlleleFreq(merged,tags, "ExAc")
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2))
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.5), las = 1)
freq <- getAlleleFreq(merged,tags, "ExAc")
freq
freq %>% arrange("AF")
freq %>% arrange(AF)
cor(freq$AF, freq$Hits)
freq <- getAlleleFreq(merged,tags, "ExAc")
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2))
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.5), las = 1)
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.5), las = 1)
par(mar=c(5, 4, 4, 2)+0.1)
cbind("Disease" = disease,"PATTERN" = tags %>% unique)
named.freqs <- bp[tags] %>% setNames(disease)
named.prev <- 1/ACMG_Lit$Inverse.Prevalence %>% setNames(disease)
allelic.het <- 0.02
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * allelic.het
par(mar=c(22, 4, 3, 1))
barplot(penetrance %>% log10,las = 2, ylab = "Penetrance")
par(mar=c(5, 4, 4, 2)+0.1)
barplot(penetrance,las = 2, ylab = "Penetrance")
barplot(penetrance,las = 2, ylab = "Penetrance", horiz = T)
par(mar=c(5, 15, 5, 2))
barplot(penetrance,las = 2, ylab = "Penetrance", horiz = T)
par(mar=c(5, 4, 4, 2)+0.1)
par(mar=c(5, 25, 5, 2))
barplot(penetrance,las = 2, ylab = "Penetrance", horiz = T)
par(mar=c(5, 4, 4, 2)+0.1)
par(mar=c(5, 20, 5, 2))
barplot(penetrance,las = 2, ylab = "Penetrance", horiz = T)
par(mar=c(5, 22, 5, 2))
barplot(penetrance,las = 2, ylab = "Penetrance", horiz = T)
par(mar=c(5, 22, 5, 2))
barplot(penetrance,las = 2, xlab = "Penetrance", horiz = T)
barplot(penetrance %>% log10,las = 2, xlab = "Penetrance", horiz = T)
shiny::runApp('HST-2016/week_6/pipeline_1000g')
?boxpplot
?boxpp\lot
?boxplot
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
mtcars
named.prev[unique(disease)]/named.freqs[unique(disease)]
allelic.het <- c(0.001,0.02,0.5)
named.prev[unique(disease)]/named.freqs[unique(disease)]*allelic.het
allelic.het
named.prev[unique(disease)]/named.freqs[unique(disease)]
sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het)
sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% unlist
sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% unlist
sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
cbind(temp,rep(allelic.het,length(temp)/3))
data <- data.frame("penetrance" = temp, "allelic.het" = rep(allelic.het,length(temp)/3))
boxplot()
boxplot(penetrance ~ allelic.het, data)
?boxplot
boxplot(mpg~cyl,data=mtcars, main="Car Milage Data",
xlab="Number of Cylinders", ylab="Miles Per Gallon")
mtcars
data
temp <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het)
temp
data <- data.frame("penetrance" = temp, "allelic.het" = rep(allelic.het,length(temp)/3))
data
temp <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
data <- data.frame("penetrance" = temp, "allelic.het" = rep(allelic.het,length(temp)/3))
data
names(disease)
disease
rep(disease,3)
disease
sapply(disease,function(x) rep(x,3)) %>% as.vector()
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * allelic.het
temp <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
temp2 <- sapply(disease,function(x) rep(x,3)) %>% as.vector()
temp2
data <- data.frame("penetrance" = temp, "disease" = temp2)
data
boxplot(penetrance ~ disease, data)
?boxplot
boxplot(penetrance ~ disease, data, horizontal = TRUE)
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1)
temp
temp>1
temp[temp>1] <- 1
data <- data.frame("penetrance" = temp, "disease" = temp2)
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1)
data
allelic.het <- c(0.001,0.001,0.02,0.5,0.5)
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * allelic.het
temp <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
temp2 <- sapply(disease,function(x) rep(x,3)) %>% as.vector()
temp[temp>1] <- 1
data <- data.frame("penetrance" = temp, "disease" = temp2)
temp2 <- sapply(disease,function(x) rep(x,5)) %>% as.vector()
temp[temp>1] <- 1
data <- data.frame("penetrance" = temp, "disease" = temp2)
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1)
summary(allelic.het)
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Low, Mid, and High Penetrance Estimates for Allelic Heterogeneity = 0.001, 0.02, and 0.5")
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for Allelic Heterogeneity = 0.001, 0.02, and 0.5")
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, and 0.5")
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5")
par(mar=c(5, 15, 5, 2)) #changes plotting window to have
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.5), las = 1)
cbind("Disease" = disease,"PATTERN" = tags %>% unique)
bp[tags]
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * allelic.het
penetrance
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * median(allelic.het)
penetrance
temp <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
temp
temp2 <- sapply(disease,function(x) rep(x,5)) %>% as.vector()
temp2
replicate
?replicate
replicate(x(1,2,3),3)
replicate(c(1,2,3),3)
replicate(3,c(1,2,3))
data <- data.frame("penetrance" = temp, "disease" = sapply(disease, function(x) rep(x,length(allelic.het))) %>% as.vector)
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
pen.unlist[pen.unlist] <- 1
# replicate each element n times to create labels
data <- data.frame("penetrance" = pen.unlist, "disease" = sapply(disease, function(x) rep(x,length(allelic.het))) %>% as.vector)
data
par(mar=c(5, 22, 5, 2))
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5")
freq <- getAlleleFreq(sub.clinvar,tags, "G1000")
input <- sub.1000g
tag
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
freq.data <- input %>% subset(loc) %>% select(contains(c("HA","NA"))) %>% rowSums
input %>% str
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
freq.data <- input %>% subset(loc) %>% select(13:ncol(input)) %>% rowSums
#freq.esp <- input %>% subset(loc) %>% select(freq.use)
missing <- is.na(freq.data)
#freq.exac[missing] <- freq.esp[missing]
hits <- sum(loc)
final <- 1-prod(1-freq.data[!missing])
c(final, hits) %>% setNames(c("AF","Hits"))
loc
id <- sub.clinvar$VarID[1]
sub.1000g %>% subset(sub.1000g$VarID == id) %>% select(13:ncol(sub.1000g)) %>% str
sub.1000g %>% subset(sub.1000g$VarID == id) %>% select(13:ncol(sub.1000g)) %>% unlist %>% str
sapply(sub.clinvar$VarID, function(id) {
sub.1000g %>% subset(sub.1000g$VarID == id) %>% select(13:ncol(sub.1000g)) %>% unlist
}) %>% str
dim(sub.clinvar)
sapply(sub.clinvar$VarID, function(id) {
sub.1000g %>% subset(sub.1000g$VarID == id) %>% select(13:ncol(sub.1000g)) %>% unlist
}) %>% t %>% tbl_df %>% str
temp <- sapply(sub.clinvar$VarID, function(id) {
sub.1000g %>% subset(sub.1000g$VarID == id) %>% select(13:ncol(sub.1000g)) %>% unlist
}) %>% t %>% tbl_df
cbind(sub.clinvar,temp) %>% str
sub.cinvar <- cbind(sub.clinvar,temp)
input <- sub.clinvar
sub.clinvar <- cbind(sub.clinvar,temp)
rm(sub.cinvar)
input <- sub.clinvar
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
loc
freq.data <- input %>% subset(loc) %>% select(11:ncol(input)) %>% rowSums
freq.data
missing <- is.na(freq.data)
#freq.exac[missing] <- freq.esp[missing]
hits <- sum(loc)
final <- 1-prod(1-freq.data[!missing])
c(1,2,3) > 0
c(1,2,3) > 0 %>% mean()
tags
tag <- tags[35]
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
loc
freq.data <- mean(colSums(input[loc,11:ncol(input)] )>0)
freq.data
colSums(input[loc,11:ncol(input)] )
colSums(input[loc,11:ncol(input)] )>0
missing <- is.na(freq.data)
missing
c(1,2,3,NA)
c(1,2,3,NA) %>% is.na()
c(1,2,3) %>% is.na()
freq.data <- mean(colSums(input[loc,11:ncol(input)] )>0) %>% unlist
freq.data
get1000GAlleleFreq <- function(input, tags) {
temp <- sapply(unique(tags), function(tag) {
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
final <- mean(colSums(input[loc,11:ncol(input)] )>0)
hits <- sum(loc)
c(final, hits) %>% setNames(c("AF","Hits"))
}) %>% t %>% tbl_df
data.frame("Tags" = unique(tags), temp)
}
freq <- get1000GAlleleFreq(sub.clinvar,tags)
freq
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2)) #changes plotting window to have greater left-margins
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.5), las = 1)
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.2), las = 1)
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.1), las = 1)
freq
arrange(freq,AF)
freq <- getExACAlleleFreq(merged,tags, "ExAc")
getExACAlleleFreq <- function(input, tags, data) {
temp <- sapply(unique(tags), function(tag) {
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
freq.data <- input %>% subset(loc) %>% select(contains(data))
#freq.esp <- input %>% subset(loc) %>% select(freq.use)
missing <- is.na(freq.data)
#freq.exac[missing] <- freq.esp[missing]
hits <- sum(loc)
final <- 1-prod(1-freq.data[!missing])
c(final, hits) %>% setNames(c("AF","Hits"))
}) %>% t %>% tbl_df
data.frame("Tags" = unique(tags), temp)
}
get1000GAlleleFreq <- function(input, tags) {
temp <- sapply(unique(tags), function(tag) {
tag.vec <- strsplit(tag,";") %>% unlist
loc <- rep(0,nrow(input))
for(tag in tag.vec)
loc <- loc | grepl(tag,input$Disease, ignore.case = T)
final <- mean(colSums(input[loc,11:ncol(input)] )>0)
hits <- sum(loc)
c(final, hits) %>% setNames(c("AF","Hits"))
}) %>% t %>% tbl_df
data.frame("Tags" = unique(tags), temp)
}
freq <- getExACAlleleFreq(merged,tags, "ExAc")
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2)) #changes plotting window to have greater left-margins
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.1), las = 1)
arrange(freq,AF)
freq <- get1000GAlleleFreq(sub.clinvar,tags)
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2)) #changes plotting window to have greater left-margins
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.1), las = 1)
par(mar=c(5, 4, 4, 2)+0.1) #resets margins
cbind("Disease" = disease,"PATTERN" = tags %>% unique)
named.freqs <- bp[tags] %>% setNames(disease)
named.prev <- 1/ACMG_Lit$Inverse.Prevalence %>% setNames(disease)
# Repeats allow for correct quartile calculations
allelic.het <- c(0.001,0.001,0.02,0.5,0.5)
# Point values for penetrance
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * median(allelic.het)
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
pen.unlist[pen.unlist] <- 1
# replicate each element n times to create labels
data <- data.frame("penetrance" = pen.unlist, "disease" = sapply(disease, function(x) rep(x,length(allelic.het))) %>% as.vector)
par(mar=c(5, 22, 5, 2))
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5")
data
pen.unlist
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
pen.unlist[pen.unlist>1] <- 1
# replicate each element n times to create labels
data <- data.frame("penetrance" = pen.unlist, "disease" = sapply(disease, function(x) rep(x,length(allelic.het))) %>% as.vector)
par(mar=c(5, 22, 5, 2))
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5")
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5, AF from 1000G")
e
freq <- getExACAlleleFreq(merged,tags, "ExAc")
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2)) #changes plotting window to have greater left-margins
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,0.1), las = 1)
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,max(bp)*1.1, las = 1)
par(mar=c(5, 4, 4, 2)+0.1) #resets margins
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,max(bp)*1.1, las = 1)
par(mar=c(5, 4, 4, 2)+0.1) #resets margins
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,max(bp))*1.1, las = 1)
par(mar=c(5, 4, 4, 2)+0.1) #resets margins
# Map of disease name to disease tags
cbind("Disease" = disease,"PATTERN" = tags %>% unique)
named.freqs <- bp[tags] %>% setNames(disease)
named.prev <- 1/ACMG_Lit$Inverse.Prevalence %>% setNames(disease)
# Repeats allow for correct quartile calculations
allelic.het <- c(0.001,0.001,0.02,0.5,0.5)
# Point values for penetrance
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * median(allelic.het)
# Matrix of penetrance values for allelic het range, capped at 1
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
pen.unlist[pen.unlist>1] <- 1
# replicate each element n times to create labels
data <- data.frame("penetrance" = pen.unlist, "disease" = sapply(disease, function(x) rep(x,length(allelic.het))) %>% as.vector)
par(mar=c(5, 22, 5, 2))
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5, AF from 1000G")
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5, AF from ExAC")
pen.unlist
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
pen.unlist
freq <- get1000GAlleleFreq(sub.clinvar,tags)
bp <- freq$AF %>% setNames(freq$Tags) %>% sort(decreasing = T)
par(mar=c(5, 15, 5, 2)) #changes plotting window to have greater left-margins
barplot(bp, las = 2, pch = 'h', xlab ="P(having a variant)", main = "Carrier frequency by disease",
horiz = T, xlim = c(0,max(bp))*1.1, las = 1)
par(mar=c(5, 4, 4, 2)+0.1) #resets margins
# Map of disease name to disease tags
cbind("Disease" = disease,"PATTERN" = tags %>% unique)
named.freqs <- bp[tags] %>% setNames(disease)
named.prev <- 1/ACMG_Lit$Inverse.Prevalence %>% setNames(disease)
# Repeats allow for correct quartile calculations
allelic.het <- c(0.001,0.001,0.02,0.5,0.5)
# Point values for penetrance
penetrance <- named.prev[unique(disease)]/named.freqs[unique(disease)] * median(allelic.het)
# Matrix of penetrance values for allelic het range, capped at 1
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
pen.unlist
pen.unlist>1
which(pen.unlist>1)
which(pen.unlist %>% is.na)
?is.inf
which(pen.unlist %>% is.infinite)
which(pen.unlist %>% is.infinite)[c(T,F,F,F,F)]
c(1,2,3)[1] <- c(2,3)
seq(1,6)
sapply(which(pen.unlist %>% is.infinite)[c(T,F,F,F,F)], function(x) seq(x,x+4))
inf.loc <- which(pen.unlist %>% is.infinite)[c(T,F,F,F,F)]
inf.loc
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
inf.loc <- which(pen.unlist %>% is.infinite)[c(T,F,F,F,F)]
sapply(inf.loc, function(i){
pen.unlist[seq(inf.loc,inf.loc+4)] <- c(0,0,1,1,1)
})
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
inf.loc <- which(pen.unlist %>% is.infinite)[c(T,F,F,F,F)]
sapply(inf.loc, function(i){
pen.unlist[seq(i,i+4)] <- c(0,0,1,1,1)
})
pen.unlist <- sapply(named.prev[unique(disease)]/named.freqs[unique(disease)], function(x) x*allelic.het) %>% as.vector
inf.loc <- which(pen.unlist %>% is.infinite)[c(T,F,F,F,F)]
for(i in inf.loc)
pen.unlist[seq(i,i+4)] <- c(0,0,1,1,1)
pen.unlist
pen.unlist[pen.unlist>1] <- 1
# replicate each element n times to create labels
data <- data.frame("penetrance" = pen.unlist, "disease" = sapply(disease, function(x) rep(x,length(allelic.het))) %>% as.vector)
par(mar=c(5, 22, 5, 2))
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5, AF from ExAC")
boxplot(penetrance ~ disease, data, horizontal = TRUE, las = 1, xlab = "Penetrance", main = "Penetrance Range Estimates for P(V|D) = 0.001, 0.02, 0.5, AF from 1000G")
freq1 <- getExACAlleleFreq(merged,tags, "ExAc")
freq2 <- get1000GAlleleFreq(sub.clinvar,tags)
cor(freq1$AF, freq2$AF)
freq1$AF
ffreq
freq1
freq2
freq1
freq2
cor(freq1$AF, freq2$AF)
rm(data)
download
rm(download)
rm(freq1)
rm(freq)
rm(freq2)
rm(input)
rm(temp)
rm(ACMG.1000g)
rm(ACMG.page)
rm(badrow)
rm(final)
rm(freq.data)
rm(freq.esp)
rm(freq.exac)
rm(G1000_Overall_Frequency)
rm(header)
rm(hits)
rm(i)
rm(id)
rm(inf.loc)
rm(LMM.page)
rm(loc)
rm(loc.exac)
rm(loc.freq)
rm(mismatch)
rm(missing)
rm(num.variants)
rm(row)
rm(tag)
rm(tag.vec)
rm(temp2)
rm(TG_Overall_Frequency)
rm(values)
rm(title)
rm(getAlleleFreq())
rm(getAlleleFreq
)
rm(plot.frac)
rm(plot.pop)
setwd("/Users/jamesdiao/Documents/Kohane_Lab/HST-2016/week_7")
save.image(file = "join_tools_7-27")
